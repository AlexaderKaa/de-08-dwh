/*
4NF: практика
В предыдущих уроках мы отмечали, что 3NF — наиболее оптимальная форма для работы с реляционной БД. 
Она позволяет избавиться от основных аномалий и не наплодить больше таблиц, чем нужно, сохранив место на диске и высокую производительность. 
Однако четвёртая и последующие нормальные формы не существовали бы, если бы тоже не были нужны — пусть и не так часто, как третья.
От 3NF до 4NF один шаг — избавиться от многозначных зависимостей. 
Напомним, при многозначной зависимости каждому значению одной колонки соответствуют несколько значений из двух и более других колонок.
Например, если в таблице с тремя колонками A, B и C, колонки B и C не зависят друг от друга, но зависят от А, и связи A-B и A-C имеют характер «один ко многим», 
то в таблице существуют многозначная зависимость.
В конце предыдущего урока вы изучили таблицу nf_lesson.source_4nf и нашли в ней многозначную зависимость (Subject → Teacher и Subject → Book). Пора с ней попрощаться.
*/
/*Создание таблицы nf_lesson.subject_teacher_4nf*/

DROP TABLE IF EXISTS nf_lesson.subject_teacher_4nf;
CREATE TABLE nf_lesson.subject_teacher_4nf AS
SELECT DISTINCT 
  subject  -- название предмета
  ,teacher -- имя преподавателя
FROM nf_lesson.source_4nf; 

/*Создание таблицы nf_lesson.subject_book_4nf*/

DROP TABLE IF EXISTS nf_lesson.subject_book_4nf;
CREATE TABLE nf_lesson.subject_book_4nf AS
SELECT DISTINCT 
  subject,  -- название предмета
  book
FROM nf_lesson.source_4nf;